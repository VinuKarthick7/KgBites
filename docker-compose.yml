services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: kgbites_postgres
    environment:
      POSTGRES_DB: kgbites_db
      POSTGRES_USER: kgbites_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-kgbites_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kgbites_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kgbites_user -d kgbites_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kgbites_backend
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=kgbites_db
      - DB_USER=kgbites_user
      - DB_PASSWORD=${DB_PASSWORD:-kgbites_password}
      - DB_PORT=5432
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kgbites_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # React Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: kgbites_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - kgbites_network

networks:
  kgbites_network:
    driver: bridge

volumes:
  postgres_data: